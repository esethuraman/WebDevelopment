Basic Idea:
	The data flow and UI are inspired fomr the bug tracking tool called JIRA that I was using for the past 2 years.

Database details:
	This application has two tables populated in Postgres:
	1. Users
		email, name
	2. Todos
		name, assigned_to, description, hours, completed, user_id (assigned_by)

	The two tables are associated by means of the user_id field in the Users table. It is used as teh task assignee name in the Todos table

	assigned_to: This is declared as string in the database. In order to assign tasks to only valid users, I have chosen the method of showing dropdown list of users from the database. Inspired from JIRA application, the users are displayed in the form of:
		"user_name" <"user_email_id">
	This way, it is ensured that users are easily identifiable (using user name) and the users are unqiuely distinguishable from one another (using email id)

Session Choices: 
	The association between sessions is established by means of user_id. Since user_id i indexed, that is being used as refernce for extracting any further data from the table. 

	Example: delete operation for users are carried out based on user_id. This has an advantage of less cookie-overhead and high security (as explained by Professor Nat Tuk)

	As a result, this application has the advantage of vertical scalability.

Application workflow:
	The home page for this application is the login page. So, for the first time users, register link should be used for registering with a valid email id. 
	Once an user account is created, login is page is used to enter the dashboard. 
	Since this is a light weight application, I wanted to show an overview to the user in the dashboard. So, on top of this dashboard, the tabs for creating a new task is made available.
	The rest of the dashboard page contains a glimpse of all the tasks with details such as task name, assigned by and assigned to fields.Clicking the view button on each task template will elaborate the task details.
	Edit button allows the task to be edited.
	Tasks can only be deleted by clicking the view button. I am deliberately not allowing the task delete option to be viewed anywhere else. Because, before deleting a task, the user should have fully seen it. 
